// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

$my-custom-level: mat.define-typography-level(
  $font-family: 'Poppins',
  $font-weight: 400,
  $font-size: 1rem,
  $line-height: 1,
  $letter-spacing: normal,
);
$my-custom-typography-config: mat.define-typography-config(
  $headline-1: mat.define-typography-level(112px, 112px, 300, $letter-spacing: -0.05em),
  $headline-2: mat.define-typography-level(56px, 56px, 400, $letter-spacing: -0.02em),
  $headline-3: mat.define-typography-level(45px, 48px, 400, $letter-spacing: -0.005em),
  $headline-4: mat.define-typography-level(34px, 40px, 400),
  $headline-5: mat.define-typography-level(24px, 32px, 400),
  // ...
);
$my-typography: mat.define-typography-config();
$mat-custom-blue: (
  50: #fdf8e6,
  100: #fbedc2,
  200: #f8e199,
  300: #f5d470,
  400: #f3cb51,
  500: #f1c232,
  600: #efbc2d,
  700: #edb426,
  800: #ebac1f,
  900: #e79f13,
  A100: #ffffff,
  A200: #fff4e2,
  A400: #ffe2af,
  A700: #ffd896,
  contrast: (
    50: #000000,
    100: #000000,
    200: #000000,
    300: #000000,
    400: #000000,
    500: #000000,
    600: #000000,
    700: #000000,
    800: #000000,
    900: #000000,
    A100: #000000,
    A200: #000000,
    A400: #000000,
    A700: #000000,
  ),
);
// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$pokedex-primary: mat.define-palette($mat-custom-blue);
$pokedex-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);
$my-typography: mat.define-typography-config();
// The warn palette is optional (defaults to red).
$pokedex-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$light-theme: mat.define-light-theme(
  (
    color: (
      primary: $pokedex-primary,
      accent: $pokedex-accent,
      warn: $pokedex-warn,
    ),
    typography: $my-typography,
  )
);
$dark-theme: mat.define-dark-theme(
  (
    color: (
      primary: $pokedex-primary,
      accent: $pokedex-accent,
      warn: $pokedex-warn,
    ),
    typography: $my-typography,
    density: -2,
    background: mat.get-color-from-palette($mat-custom-blue, 900),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($dark-theme);

// Apply the dark theme by default
//@include mat.core-theme($dark-theme);
//@include mat.button-theme($dark-theme);

// Apply the light theme only when the user prefers light themes.
/* @media (prefers-color-scheme: light) {
  // Use the `-color` mixins to only apply color styles without reapplying the same
  // typography and density styles.
  @include mat.core-color($light-theme);
  @include mat.button-color($light-theme);
} */
/* You can add global styles to this file, and also import other style files */

html,
body {
  height: 100%;
  margin: 0;
  font-family: 'Poppins', 'Helvetica Neue', sans-serif;
}
